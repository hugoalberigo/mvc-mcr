{
  "openapi": "3.0.3",
  "info": {
    "title": "RPS Game - Endpoint",
    "description": "API untuk RPS Game",
    "contact": {
      "email": "hugoalberigo@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "0.0.4"
  },
  "servers": [
    {
      "url": "https://localhost:3000"
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "Everything about auth (login & register)"
    },
    {
      "name": "Rooms",
      "description": "Endpoint for creating rooms"
    },
    {
      "name": "Fight",
      "description": "Endpoint for battle in game room"
    }
  ],
  "paths": {
    "/auth/api/v1/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Process login",
        "description": "Process login",
        "operationId": "authenticationLogin",
        "requestBody": {
          "description": "Only send username adn password",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "admin"
                  },
                  "password": {
                    "type": "string",
                    "example": "password"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "username": {
                      "type": "string",
                      "example": "admin"
                    },
                    "accessToken": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwidXNlcm5hbWUiOiJleG9yZCIsImlhdCI6MTY3MDQxODgyMH0.YOH5PbbNfPlbWw2-o-j5IM0Fyax_10gd5zTuSWsty7c"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/api/v1/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Process registration",
        "description": "Process registration",
        "operationId": "authenticationRegister",
        "requestBody": {
          "description": "Send username, password and name of new user",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "admin"
                  },
                  "password": {
                    "type": "string",
                    "example": "password"
                  },
                  "name": {
                    "type": "string",
                    "example": "admin"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "username": {
                      "type": "string",
                      "example": "admin"
                    },
                    "accessToken": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwidXNlcm5hbWUiOiJleG9yZCIsImlhdCI6MTY3MDQxODgyMH0.YOH5PbbNfPlbWw2-o-j5IM0Fyax_10gd5zTuSWsty7c"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/api/v1/whoami": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Endpoint for get user information",
        "description": "Input Access Token user",
        "operationId": "authenticationWhoami",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "username": {
                      "type": "string",
                      "example": "admin"
                    },
                    "password": {
                      "type": "string",
                      "example": "$2b$10$YA8RWyecC85AU6CgQeMV3OFxpui21/FqS.KQaqpPqCpTYv.CUa8E6"
                    },
                    "name": {
                      "type": "string",
                      "example": "admin"
                    },
                    "accessToken": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwidXNlcm5hbWUiOiJleG9yZCIsImlhdCI6MTY3MDQxODgyMH0.YOH5PbbNfPlbWw2-o-j5IM0Fyax_10gd5zTuSWsty7c"
                    },
                    "expired_at": {
                      "type": "string",
                      "example": "2023-01-01T00:00:00.000Z"
                    },
                    "role": {
                      "type": "string",
                      "example": "player"
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2022-11-28T12:47:29.106Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "example": "2022-12-07T13:13:40.993Z"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/room/api/v1/create": {
      "post": {
        "tags": [
          "Rooms"
        ],
        "summary": "Process creating rooms",
        "description": "Process creating rooms",
        "operationId": "roomsCreate",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "example": 1670421613622
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2022-11-28T12:47:29.106Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "example": "2022-12-07T13:13:40.993Z"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/fight/api/v1/{room_name}": {
      "post": {
        "tags": [
          "Fight"
        ],
        "summary": "Process fight",
        "description": "Process fight",
        "operationId": "fightApi",
        "parameters": [
          {
            "in": "path",
            "name": "room_name",
            "schema": {
              "type": "string",
              "example": 1670421613622
            },
            "required": true
          }
        ],
        "requestBody": {
          "description": "Only send username adn password",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "choice": {
                    "type": "string",
                    "example": "P"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Waiting for opponent"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "user_id": {
                          "type": "integer",
                          "example": 1
                        },
                        "room_id": {
                          "type": "integer",
                          "example": 1
                        },
                        "choice": {
                          "type": "string",
                          "example": "P"
                        },
                        "createdAt": {
                          "type": "string",
                          "example": "2022-11-28T12:47:29.106Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "example": "2022-12-07T13:13:40.993Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "petId": {
            "type": "integer",
            "format": "int64",
            "example": 198772
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "example": 7
          },
          "shipDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "description": "Order Status",
            "example": "approved",
            "enum": [
              "placed",
              "approved",
              "delivered"
            ]
          },
          "complete": {
            "type": "boolean"
          }
        },
        "xml": {
          "name": "order"
        }
      },
      "Customer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 100000
          },
          "username": {
            "type": "string",
            "example": "fehguy"
          },
          "address": {
            "type": "array",
            "xml": {
              "name": "addresses",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          }
        },
        "xml": {
          "name": "customer"
        }
      },
      "Address": {
        "type": "object",
        "properties": {
          "street": {
            "type": "string",
            "example": "437 Lytton"
          },
          "city": {
            "type": "string",
            "example": "Palo Alto"
          },
          "state": {
            "type": "string",
            "example": "CA"
          },
          "zip": {
            "type": "string",
            "example": "94301"
          }
        },
        "xml": {
          "name": "address"
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Dogs"
          }
        },
        "xml": {
          "name": "category"
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "username": {
            "type": "string",
            "example": "theUser"
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "James"
          },
          "email": {
            "type": "string",
            "example": "john@email.com"
          },
          "password": {
            "type": "string",
            "example": "12345"
          },
          "phone": {
            "type": "string",
            "example": "12345"
          },
          "userStatus": {
            "type": "integer",
            "description": "User Status",
            "format": "int32",
            "example": 1
          }
        },
        "xml": {
          "name": "user"
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        },
        "xml": {
          "name": "tag"
        }
      },
      "Pet": {
        "required": [
          "name",
          "photoUrls"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "name": {
            "type": "string",
            "example": "doggie"
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "photoUrls": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "type": "string",
              "xml": {
                "name": "photoUrl"
              }
            }
          },
          "tags": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          },
          "status": {
            "type": "string",
            "description": "pet status in the store",
            "enum": [
              "available",
              "pending",
              "sold"
            ]
          }
        },
        "xml": {
          "name": "pet"
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "xml": {
          "name": "##default"
        }
      }
    },
    "requestBodies": {
      "Pet": {
        "description": "Pet object that needs to be added to the store",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Pet"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/Pet"
            }
          }
        }
      },
      "UserArray": {
        "description": "List of user object",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "petstore_auth": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://petstore3.swagger.io/oauth/authorize",
            "scopes": {
              "write:pets": "modify pets in your account",
              "read:pets": "read your pets"
            }
          }
        }
      },
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      }
    }
  }
}